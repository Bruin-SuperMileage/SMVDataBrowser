{"version":3,"sources":["firebase.js","line.js","App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","apiKeyHidden","authDomain","databaseURL","projectId","storageBucket","firebase","initializeApp","LineGraph","annotationArray","this","props","laps","forEach","lap","index","x","strokeDashArray","borderColor","fillColor","label","text","style","color","background","series","name","data","vals","options","annotations","position","xaxis","chart","animations","enabled","type","toolbar","tools","show","reset","export","csv","filename","png","fontFamily","colors","dataLabels","stroke","curve","width","title","align","fontWeight","fontSize","grid","row","opacity","column","markers","size","categories","labels","axisBorder","axisTicks","yaxis","tooltip","followCursor","fillSeriesColor","theme","valArray","length","array","averageValue","reduce","a","b","toPrecision","Grid","container","direction","justify","alignItems","item","xs","Select","onChange","changeDialogState","defaultValue","MenuItem","value","Typography","variant","changeTrial","trials","map","className","height","React","Component","App","toggleDrawer","setState","drawerOpen","state","handleClose","setTrial","trial","trialNumber","changeDialogState1","event","graph1value","target","changeDialogState2","graph2value","changeDialogState3","graph3value","changeDialogState4","graph4value","changeTrial1","graph1Trial","toString","changeTrial2","graph2Trial","changeTrial3","graph3Trial","changeTrial4","graph4Trial","allData","graph1Data","graph2Data","graph3Data","graph4Data","trialTimes","graph1Times","graph2Times","graph3Times","graph4Times","graph1Laps","graph2Laps","graph3Laps","graph4Laps","database","ref","on","snapshot","val","Object","keys","key","push","Number","substring","times","split1","split","split2","split3","split4","first","firstValue","zeroPad","num","places","String","padStart","keySplit","keyMilli","parseInt","isInteger","subMilli","sort","prevProps","prevState","lapTimes","currentLap","graphIndexes","lapAccu","lapSplit","secondLapSplit","lapMilli","console","log","classes","Paper","root","square","AppBar","Toolbar","component","src","process","alt","spacing","capitalize","join","withStyles","minHeight","backgroundColor","drawer","menuIcon","marginRight","flexGrow","str","charAt","toUpperCase","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1190e1ef.chunk.js","sourcesContent":["import {apiKeyHidden} from './config';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Set the configuration for your app\r\n// TODO: Replace with your project's config object\r\n\r\nvar config = {\r\n  apiKey: apiKeyHidden,\r\n  authDomain: \"smv-daq.firebaseapp.com\",\r\n  databaseURL: \"https://smv-daq.firebaseio.com\",\r\n  projectId: \"smv-daq\",\r\n  storageBucket: \"bucket.appspot.com\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport { Grid, Select, MenuItem, Typography } from '@material-ui/core';\r\nimport Chart from \"react-apexcharts\";\r\nimport './App.css'\r\n\r\nclass LineGraph extends React.Component {\r\n  render() {\r\n    var annotationArray = [];\r\n    if (this.props.laps) {\r\n      this.props.laps.forEach((lap, index) => {\r\n        annotationArray[index] = {\r\n          x: lap,\r\n          strokeDashArray: 0,\r\n          borderColor: '#f2a922',\r\n          fillColor: '#f2a922',\r\n          label: {\r\n            text: \"Lap \" + (index+1),\r\n            borderColor: \"f2a922\",\r\n            style: {\r\n              color: \"#fff\",\r\n              background: \"#f2a922\",\r\n            }\r\n          }\r\n        }\r\n      })\r\n    };\r\n    var imgPath = \"<img src=\" + process.env.PUBLIC_URL + '/reset.png width=\"20\">';\r\n    var series = [{\r\n      name: this.props.name,\r\n      data: this.props.vals\r\n    }]\r\n    var options = {\r\n      annotations: {\r\n        position: \"front\",\r\n        xaxis: annotationArray,\r\n      },\r\n      chart: {\r\n        animations: {\r\n          enabled: true,\r\n        },\r\n        type: 'line',\r\n        toolbar: {\r\n          tools: {\r\n            show: true,\r\n            reset: imgPath,\r\n          },\r\n          export: {\r\n            csv: {\r\n              filename: this.props.name,\r\n            },\r\n            png: {\r\n              filename: this.props.name,\r\n            },\r\n          }\r\n        },\r\n        fontFamily: 'Roboto',\r\n      },\r\n      colors: ['#3463d9'],\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 2,\r\n      },\r\n      title: {\r\n        text: this.props.name,\r\n        align: 'center',\r\n        style: {\r\n          color: \"#fafafa\",\r\n          fontWeight: 'normal',\r\n          fontSize: \"20px\"\r\n        }\r\n      },\r\n      grid: {\r\n        borderColor: '#2e2d2d',\r\n        row: {\r\n          colors: ['transparent'],\r\n          opacity: 0.5\r\n        },\r\n        column: {\r\n          colors: ['transparent'],\r\n          opacity: 0.5\r\n        }\r\n      },\r\n      markers: {\r\n        size: 1,\r\n      },\r\n      xaxis: {\r\n        categories: this.props.labels,\r\n        labels: {\r\n          style: {\r\n            colors: \"#757171\"\r\n          }\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: '#000000'\r\n        },\r\n        axisTicks: {\r\n          show: false,\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: \"#757171\"\r\n          }\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: '#000000'\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        followCursor: false,\r\n        fillSeriesColor: true,\r\n        theme: \"dark\",\r\n      },\r\n    }\r\n    let average = (array) => array.reduce((a, b) => a + b) / array.length;\r\n    var valArray = [0,0];\r\n    if (this.props.vals.length !== 0)\r\n      valArray = this.props.vals;\r\n    var averageValue = +average(valArray).toPrecision(4);\r\n    return (\r\n      <div>\r\n        <Grid container direction={\"row\"} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={1}></Grid>\r\n          <Grid item xs={2}>\r\n            <Select onChange={this.props.changeDialogState} defaultValue={'hall-effect|speed'}>\r\n              <MenuItem value=\"hall-effect|rpm\">RPM</MenuItem>\r\n              <MenuItem value=\"hall-effect|speed\">Speed</MenuItem>\r\n              <MenuItem value=\"hall-effect|throttle\">Throttle</MenuItem>\r\n              <MenuItem value=\"accelerometer|acceleration x\">Acceleration X</MenuItem>\r\n              <MenuItem value=\"accelerometer|acceleration y\">Acceleration Y</MenuItem>\r\n              <MenuItem value=\"accelerometer|acceleration z\">Acceleration Z</MenuItem>\r\n              <MenuItem value=\"joulemeter|current\">Current</MenuItem>\r\n              <MenuItem value=\"joulemeter|power\">Power</MenuItem>\r\n              <MenuItem value=\"joulemeter|voltage\">Voltage</MenuItem>\r\n              <MenuItem value=\"magnetometer|MagX\">MagX</MenuItem>\r\n              <MenuItem value=\"magnetometer|MagY\">MagY</MenuItem>\r\n              <MenuItem value=\"magnetometer|MagZ\">MagZ</MenuItem>\r\n              <MenuItem value=\"gyroscope|GyX\">GyX</MenuItem>\r\n              <MenuItem value=\"gyroscope|GyY\">GyY</MenuItem>\r\n              <MenuItem value=\"gyroscope|GyZ\">GyZ</MenuItem>\r\n              <MenuItem value=\"gyroscope|heading\">Heading</MenuItem>\r\n              <MenuItem value=\"gyroscope|pitch\">Pitch</MenuItem>\r\n              <MenuItem value=\"gyroscope|roll\">Roll</MenuItem>\r\n              <MenuItem value=\"gps|latitude\">Latitude</MenuItem>\r\n              <MenuItem value=\"gps|longitude\">Longitude</MenuItem>\r\n              <MenuItem value=\"environment|altitude\">Altitude</MenuItem>\r\n              <MenuItem value=\"environment|temperature\">Temperature</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Typography variant=\"body1\">Average: {averageValue}</Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            {/* <Button onClick={()=>{this.ref.lineChart.chartInstance.resetZoom()}}>\r\n                Reset Zoom\r\n            </Button> */}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Select onChange={this.props.changeTrial} defaultValue={\"1\"}>\r\n              {this.props.trials.map(item => {\r\n                return ([\r\n                  <MenuItem value={item}>\r\n                    {\"Trial \" + item}\r\n                  </MenuItem>\r\n                ])\r\n              })}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction={\"row\"}>\r\n          <Grid item xs={12}>\r\n            <div className=\"card\">\r\n              <div className=\"card-image\">\r\n                <Chart \r\n                options={options}\r\n                series={series}\r\n                type=\"line\"\r\n                height=\"430\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineGraph","import React from 'react';\nimport firebase from './firebase';\nimport { Grid, withStyles, Paper, Typography, AppBar, Toolbar } from '@material-ui/core'\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\n//import LineGraph from './line'\nimport LineGraph from './line'\n\nconst styles = theme => ({\n  root: {\n    minHeight: \"100vh\",\n    // width: \"100%\",\n    // position: \"fixed\",\n    backgroundColor: \"rgb(51, 48, 48)\",\n  },\n  drawer: {\n    width: \"10rem\",\n    position: 'relative',\n  },\n  menuIcon: {\n    marginRight: 32\n  },\n  title: {\n    flexGrow: 1,\n  },\n})\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allData: {},\n      trials: [],\n      drawerOpen: false,\n      graph1value: \"hall-effect|speed\",\n      graph2value: \"hall-effect|speed\",\n      graph3value: \"hall-effect|speed\",\n      graph4value: \"hall-effect|speed\",\n      graph1Data: [],\n      graph2Data: [],\n      graph3Data: [],\n      graph4Data: [],\n      trialTimes: [],\n      graph1Times: [],\n      graph2Times: [],\n      graph3Times: [],\n      graph4Times: [],\n      graph1Trial: \"1\",\n      graph2Trial: \"1\",\n      graph3Trial: \"1\",\n      graph4Trial: \"1\",\n      graph1Laps: [],\n      graph2Laps: [],\n      graph3Laps: [],\n      graph4Laps: [],\n    }\n  }\n\n  componentDidMount() {\n    let database = firebase.database();\n    var trials = [];\n    database.ref().on('value', (snapshot) => {\n      var allData = snapshot.val();\n      Object.keys(allData).forEach(key => {\n        if (key[0]==='T')\n          trials.push(Number(key.substring(6)))\n      })\n      database.ref(\"Trial 1\").on('value', (snapshot) => {\n        var times = snapshot.val();\n        var trialTimes = [];\n        var graph1Data = [];\n        var graph2Data = [];\n        var graph3Data = [];\n        var graph4Data= [];\n        var split1 = this.state.graph1value.split(\"|\");\n        var split2 = this.state.graph2value.split(\"|\");\n        var split3 = this.state.graph3value.split(\"|\");\n        var split4 = this.state.graph4value.split(\"|\");\n        var first = false;\n        var firstValue = 0;\n        const zeroPad = (num, places) => String(num).padStart(places, '0');\n        Object.keys(times).forEach(key => {\n          var keySplit = key.split(\":\");\n          var keyMilli = parseInt(keySplit[0])*3600000 + parseInt(keySplit[1])*60000 + parseInt(keySplit[2])*1000 + parseInt(keySplit[3]);\n          if (first === false) {\n            firstValue = keyMilli;\n            first = true;\n          }\n          if (Number.isInteger(Number(key[0]))) {\n            var subMilli = keyMilli-firstValue;\n            var label = zeroPad(parseInt((subMilli / (1000*60)) % 60), 2) + \":\" \n                        + zeroPad(parseInt((subMilli / (1000)) % 60), 2) + \":\" \n                        + zeroPad(parseInt(subMilli % 1000), 3);\n            trialTimes.push(label);\n            graph1Data.push(times[key][split1[0]][split1[1]]);\n            graph2Data.push(times[key][split2[0]][split2[1]]);\n            graph3Data.push(times[key][split3[0]][split3[1]]);\n            graph4Data.push(times[key][split4[0]][split2[1]]);\n          }\n        })\n        this.setState({\n          graph1Times: trialTimes,\n          graph2Times: trialTimes,\n          graph3Times: trialTimes,\n          graph4Times: trialTimes,\n          graph1Data: graph1Data,\n          graph2Data: graph2Data,\n          graph3Data: graph3Data,\n          graph4Data: graph4Data,\n        })\n      })\n      trials.sort(function(a,b){return a-b})\n      this.setState({\n        allData: allData,\n        trials: trials,\n      })\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.graph1value !== this.state.graph1value || prevState.graph1Trial !== this.state.graph1Trial) {\n      let database = firebase.database();\n      database.ref(\"Trial \" + this.state.graph1Trial).on('value', (snapshot) => {\n        var times = snapshot.val();\n        var graph1Data = [];\n        var trialTimes = [];\n        var split1 = this.state.graph1value.split(\"|\");\n        var first = false;\n        var firstValue = 0;\n        var lapTimes = [];\n        var currentLap = 0;\n        var graphIndexes = [];\n        const zeroPad = (num, places) => String(num).padStart(places, '0')\n        Object.keys(times).forEach(key => {\n          var keySplit = key.split(\":\");\n          var keyMilli = parseInt(keySplit[0])*3600000 + parseInt(keySplit[1])*60000 + parseInt(keySplit[2])*1000 + parseInt(keySplit[3]);\n          var lapAccu = 0;\n          if (first === false) {\n            firstValue = keyMilli;\n            first = true;\n            if (typeof times[\"lap times\"] !== 'undefined') {\n              Object.keys(times[\"lap times\"]).forEach(key => {\n                if (Number(key[0])) {\n                  var lapSplit= times[\"lap times\"][key].split(\":\");\n                  var secondLapSplit = lapSplit[1].split(\".\")\n                  var lapMilli = parseInt(lapSplit[0])*60000 + parseInt(secondLapSplit[0])*1000 + parseInt(secondLapSplit[1])\n                  lapAccu += lapMilli;\n                  lapTimes.push(lapAccu);\n                  console.log(lapAccu)\n                }\n              })\n            }\n          }\n          if (Number.isInteger(Number(key[0]))) {\n            var subMilli = keyMilli-firstValue;\n            var label = zeroPad(parseInt((subMilli / (1000*60)) % 60), 2) + \":\" \n                        + zeroPad(parseInt((subMilli / (1000)) % 60), 2) + \":\" \n                        + zeroPad(parseInt(subMilli % 1000), 3);\n            trialTimes.push(label);\n            if (subMilli > lapTimes[currentLap] && currentLap+1 <= lapTimes.length) {\n              graphIndexes.push(label);\n              currentLap++;\n            }\n            graph1Data.push(times[key][split1[0]][split1[1]]);\n          }\n        })\n        this.setState({\n          graph1Times: trialTimes,\n          graph1Data: graph1Data,\n          graph1Laps: graphIndexes,\n        })\n      })\n    }\n    if (prevState.graph2value !== this.state.graph2value || prevState.graph2Trial !== this.state.graph2Trial) {\n      let database = firebase.database();\n      database.ref(\"Trial \" + this.state.graph2Trial).on('value', (snapshot) => {\n        var times = snapshot.val();\n        var graph2Data = [];\n        var trialTimes = [];\n        var split1 = this.state.graph2value.split(\"|\");\n        var first = false;\n        var firstValue = 0;\n        var lapTimes = [];\n        var currentLap = 0;\n        var graphIndexes = [];\n        const zeroPad = (num, places) => String(num).padStart(places, '0')\n        Object.keys(times).forEach(key => {\n          var keySplit = key.split(\":\");\n          var keyMilli = parseInt(keySplit[0])*3600000 + parseInt(keySplit[1])*60000 + parseInt(keySplit[2])*1000 + parseInt(keySplit[3]);\n          var lapAccu = 0;\n          if (first === false) {\n            firstValue = keyMilli;\n            first = true;\n            if (typeof times[\"lap times\"] !== 'undefined') {\n              Object.keys(times[\"lap times\"]).forEach(key => {\n                if (Number(key[0])) {\n                  var lapSplit= times[\"lap times\"][key].split(\":\");\n                  var secondLapSplit = lapSplit[1].split(\".\")\n                  var lapMilli = parseInt(lapSplit[0])*60000 + parseInt(secondLapSplit[0])*1000 + parseInt(secondLapSplit[1])\n                  lapAccu += lapMilli;\n                  lapTimes.push(lapAccu);\n                  console.log(lapAccu)\n                }\n              })\n            }\n          }\n          if (Number.isInteger(Number(key[0]))) {\n            var subMilli = keyMilli-firstValue;\n            var label = zeroPad(parseInt((subMilli / (1000*60)) % 60), 2) + \":\" \n                        + zeroPad(parseInt((subMilli / (1000)) % 60), 2) + \":\" \n                        + zeroPad(parseInt(subMilli % 1000), 3);\n            trialTimes.push(label);\n            if (subMilli > lapTimes[currentLap] && currentLap+1 <= lapTimes.length) {\n              graphIndexes.push(label);\n              currentLap++;\n            }\n            graph2Data.push(times[key][split1[0]][split1[1]]);\n          }\n        })\n        this.setState({\n          graph2Times: trialTimes,\n          graph2Data: graph2Data,\n          graph2Laps: graphIndexes,\n        })\n      })\n    }\n    if (prevState.graph3value !== this.state.graph3value || prevState.graph3Trial !== this.state.graph3Trial) {\n      let database = firebase.database();\n      database.ref(\"Trial \" + this.state.graph3Trial).on('value', (snapshot) => {\n        var times = snapshot.val();\n        var graph3Data = [];\n        var trialTimes = [];\n        var split1 = this.state.graph3value.split(\"|\");\n        var first = false;\n        var firstValue = 0;\n        var lapTimes = [];\n        var currentLap = 0;\n        var graphIndexes = [];\n        const zeroPad = (num, places) => String(num).padStart(places, '0')\n        Object.keys(times).forEach(key => {\n          var keySplit = key.split(\":\");\n          var keyMilli = parseInt(keySplit[0])*3600000 + parseInt(keySplit[1])*60000 + parseInt(keySplit[2])*1000 + parseInt(keySplit[3]);\n          var lapAccu = 0;\n          if (first === false) {\n            firstValue = keyMilli;\n            first = true;\n            if (typeof times[\"lap times\"] !== 'undefined') {\n              Object.keys(times[\"lap times\"]).forEach(key => {\n                if (Number(key[0])) {\n                  var lapSplit= times[\"lap times\"][key].split(\":\");\n                  var secondLapSplit = lapSplit[1].split(\".\")\n                  var lapMilli = parseInt(lapSplit[0])*60000 + parseInt(secondLapSplit[0])*1000 + parseInt(secondLapSplit[1])\n                  lapAccu += lapMilli;\n                  lapTimes.push(lapAccu);\n                  console.log(lapAccu)\n                }\n              })\n            }\n          }\n          if (Number.isInteger(Number(key[0]))) {\n            var subMilli = keyMilli-firstValue;\n            var label = zeroPad(parseInt((subMilli / (1000*60)) % 60), 2) + \":\" \n                        + zeroPad(parseInt((subMilli / (1000)) % 60), 2) + \":\" \n                        + zeroPad(parseInt(subMilli % 1000), 3);\n            trialTimes.push(label);\n            if (subMilli > lapTimes[currentLap] && currentLap+1 <= lapTimes.length) {\n              graphIndexes.push(label);\n              currentLap++;\n            }\n            graph3Data.push(times[key][split1[0]][split1[1]]);\n          }\n        })\n        this.setState({\n          graph3Times: trialTimes,\n          graph3Data: graph3Data,\n          graph3Laps: graphIndexes,\n        })\n      })\n    }\n    if (prevState.graph4value !== this.state.graph4value || prevState.graph4Trial !== this.state.graph4Trial) {\n      let database = firebase.database();\n      database.ref(\"Trial \" + this.state.graph4Trial).on('value', (snapshot) => {\n        var times = snapshot.val();\n        var graph4Data = [];\n        var trialTimes = [];\n        var split1 = this.state.graph4value.split(\"|\");\n        var first = false;\n        var firstValue = 0;\n        var lapTimes = [];\n        var currentLap = 0;\n        var graphIndexes = [];\n        const zeroPad = (num, places) => String(num).padStart(places, '0')\n        Object.keys(times).forEach(key => {\n          var keySplit = key.split(\":\");\n          var keyMilli = parseInt(keySplit[0])*3600000 + parseInt(keySplit[1])*60000 + parseInt(keySplit[2])*1000 + parseInt(keySplit[3]);\n          var lapAccu = 0;\n          if (first === false) {\n            firstValue = keyMilli;\n            first = true;\n            if (typeof times[\"lap times\"] !== 'undefined') {\n              Object.keys(times[\"lap times\"]).forEach(key => {\n                if (Number(key[0])) {\n                  var lapSplit= times[\"lap times\"][key].split(\":\");\n                  var secondLapSplit = lapSplit[1].split(\".\")\n                  var lapMilli = parseInt(lapSplit[0])*60000 + parseInt(secondLapSplit[0])*1000 + parseInt(secondLapSplit[1])\n                  lapAccu += lapMilli;\n                  lapTimes.push(lapAccu);\n                  console.log(lapAccu)\n                }\n              })\n            }\n          }\n          if (Number.isInteger(Number(key[0]))) {\n            var subMilli = keyMilli-firstValue;\n            var label = zeroPad(parseInt((subMilli / (1000*60)) % 60), 2) + \":\" \n                        + zeroPad(parseInt((subMilli / (1000)) % 60), 2) + \":\" \n                        + zeroPad(parseInt(subMilli % 1000), 3);\n            trialTimes.push(label);\n            if (subMilli > lapTimes[currentLap] && currentLap+1 <= lapTimes.length) {\n              graphIndexes.push(label);\n              currentLap++;\n            }\n            graph4Data.push(times[key][split1[0]][split1[1]]);\n          }\n        })\n        this.setState({\n          graph4Times: trialTimes,\n          graph4Data: graph4Data,\n          graph4Laps: graphIndexes,\n        })\n      })\n    }\n  }\n\n  toggleDrawer = () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen,\n      })\n  }\n\n  handleClose = () => {\n    this.setState({drawerOpen: false})\n  }\n\n  setTrial = (trial) => {\n    if (trial !== this.state.trialNumber)\n      this.setState({trialNumber: trial})\n  }\n\n  changeDialogState1 = (event) => {\n    this.setState({graph1value: event.target.value})\n  }\n\n  changeDialogState2 = (event) => {\n    this.setState({graph2value: event.target.value})\n  }\n\n  changeDialogState3 = (event) => {\n    this.setState({graph3value: event.target.value})\n  }\n\n  changeDialogState4 = (event) => {\n    this.setState({graph4value: event.target.value})\n  }\n\n  changeTrial1 = (event) => {\n    this.setState({graph1Trial: event.target.value.toString()})\n  }\n\n  changeTrial2 = (event) => {\n    this.setState({graph2Trial: event.target.value.toString()})\n  }\n\n  changeTrial3 = (event) => {\n    this.setState({graph3Trial: event.target.value.toString()})\n  }\n\n  changeTrial4 = (event) => {\n    this.setState({graph4Trial: event.target.value.toString()})\n  }\n\n  render() {\n    const {classes} = this.props;\n    return(\n      <Paper className={classes.root} square={true}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography component=\"h1\" variant=\"h6\" className={classes.title}>\n              Bruin Supermileage Data Browser\n            </Typography>\n            <img src={process.env.PUBLIC_URL + \"/icon.png\"} height=\"40rem\" alt=\"\"/>\n          </Toolbar>\n        </AppBar>\n        <Grid container spacing={0}>\n            <Grid container direction={\"row\"} alignItems={\"stretch\"}>\n            <Grid item xs={6} className={classes.grid}>\n                <LineGraph changeDialogState={this.changeDialogState1} vals={this.state.graph1Data} name={this.state.graph1value.split(\"|\")[1].split(' ').map(capitalize).join(' ')} labels={this.state.graph1Times} trials={this.state.trials} changeTrial={this.changeTrial1} laps={this.state.graph1Laps}/>\n                {/* <ApexLineGraph changeDialogState={this.changeDialogState1} vals={this.state.graph1Data} name={this.state.graph1value.split(\"|\")[1].split(' ').map(capitalize).join(' ')} labels={this.state.graph1Times} trials={this.state.trials} changeTrial={this.changeTrial1}/> */}\n            </Grid>\n            <Grid item xs={6}>\n                <LineGraph changeDialogState={this.changeDialogState2} vals={this.state.graph2Data} name={this.state.graph2value.split(\"|\")[1].split(' ').map(capitalize).join(' ')} labels={this.state.graph2Times} trials={this.state.trials} changeTrial={this.changeTrial2} laps={this.state.graph2Laps}/>\n            </Grid>\n            </Grid>\n            <Grid container direction={\"row\"}>\n            <Grid item xs={6}>\n                <LineGraph changeDialogState={this.changeDialogState3} vals={this.state.graph3Data} name={this.state.graph3value.split(\"|\")[1].split(' ').map(capitalize).join(' ')} labels={this.state.graph3Times} trials={this.state.trials} changeTrial={this.changeTrial3} laps={this.state.graph3Laps}/>\n            </Grid>\n            <Grid item xs={6}>\n                <LineGraph changeDialogState={this.changeDialogState4} vals={this.state.graph4Data} name={this.state.graph4value.split(\"|\")[1].split(' ').map(capitalize).join(' ')} labels={this.state.graph4Times} trials={this.state.trials} changeTrial={this.changeTrial4} laps={this.state.graph4Laps}/>\n            </Grid>\n            </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport 'typeface-roboto';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nReactDOM.render(\n  //<React.StrictMode>\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}